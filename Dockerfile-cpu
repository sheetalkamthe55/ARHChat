# FROM debian:12-slim AS env-build

# WORKDIR /srv

# # install build tools and clone and compile llama.cpp
# RUN apt-get update && apt-get install -y make git clang-16 libomp-16-dev

# RUN git clone https://github.com/ggerganov/llama.cpp.git \
#   && cd llama.cpp \
#   && make -j CC=clang-16 CXX=clang++-16

# FROM debian:12-slim AS env-deploy

# # copy openmp libraries
# ENV LD_LIBRARY_PATH=/usr/local/lib
# COPY --from=env-build /usr/lib/llvm-16/lib/libomp.so.5 ${LD_LIBRARY_PATH}/libomp.so.5

# # copy llama.cpp binaries
# COPY --from=env-build /srv/llama.cpp/llama-cli /usr/local/bin/llama-cli
# COPY --from=env-build /srv/llama.cpp/llama-server /usr/local/bin/llama-server
# COPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh
# RUN chmod +x /usr/local/bin/docker-entrypoint.sh
# # create llama user and set home directory
# RUN useradd --system --create-home llama

# # Create /models directory and set permissions
# RUN mkdir /models && chown llama:llama /models && chmod 755 /models

# USER llama

# WORKDIR /home/llama

# EXPOSE 8009

# # copy and set entrypoint script

# ENTRYPOINT [ "/usr/local/bin/docker-entrypoint.sh" ]

FROM python

RUN apt-get update
RUN apt-get install -y curl git python3-pip python3-dev python-is-python3
RUN rm -rf /var/lib/apt/lists/*

RUN pip3 install llama_cpp_python[server]

RUN apt-get update && apt-get install -y musl